{"version":3,"sources":["components/Post/Post.module.scss","components/CurrentPost/CurrentPost.module.scss","components/App/App.module.scss","pages/about/About.module.scss","components/Search/SearchContainer.module.scss","components/Header/Header.module.scss","components/Loading/Loading.module.scss","components/Error/Error.module.scss","components/PostList/PostList.module.scss","components/NotFound/NotFound.module.scss","stores/store/store.service.ts","stores/store/store.ts","components/Search/SearchContainer.tsx","components/Header/Header.tsx","components/Loading/Loading.tsx","components/Error/Error.tsx","hooks/useView.ts","components/Post/index.ts","components/Post/Post.tsx","components/PostList/index.ts","components/PostList/PostList.tsx","components/CurrentPost/CurrentPost.tsx","pages/home/Home.tsx","pages/about/About.tsx","components/NotFound/NotFound.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","optionsAllData","method","url","params","blacklistFlags","type","amount","service","getAllData","axios","request","then","response","data","jokes","catch","error","Error","getSingleData","id","optionsSingleData","idRange","category","joke","flags","nsfw","religious","political","racist","sexist","explicit","safe","lang","sortedData","singleData","isLoading","isError","searchValue","makeObservable","this","observable","setSortedData","action","bound","runInAction","forEach","item","key","toString","console","log","value","Search","Input","SearchContainer","observer","Store","postData","className","classes","container","placeholder","searchInput","onChange","event","target","setSearchValue","trim","length","filter","post","toLowerCase","includes","handleSearch","loading","enterButton","Header","header","happier","Loading","useView","useState","fullView","setFullView","Post","props","changeViewHandler","style","width","marginTop","postHeader","postText","postBtnContainer","onClick","to","slice","PostList","toJS","postList","map","CurrentPost","useParams","postSingleData","useEffect","loadSingleData","Number","currentPost","postId","fontWeight","postCategory","postJoke","columns","title","dataIndex","sorter","compare","a","b","multiple","Home","index","element","padding","textAlign","fontSize","path","dataSource","About","aboutContainer","aboutText","backLinkCotainer","NotFound","notFound","Layout","SubMenu","Menu","current","setCurrent","main","e","selectedKeys","mode","navLinkContainer","ItemGroup","Item","App","welcomeText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4b64b47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__3EfL3\",\"postHeader\":\"Post_postHeader__2JN2W\",\"postText\":\"Post_postText__Icytp\",\"postButton\":\"Post_postButton__3kgVK\",\"postBtnContainer\":\"Post_postBtnContainer__1As3M\",\"goToPost\":\"Post_goToPost__2gMLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPost\":\"CurrentPost_currentPost__wDcue\",\"postCategory\":\"CurrentPost_postCategory__367X_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLinkContainer\":\"App_navLinkContainer__2TnGE\",\"navLink\":\"App_navLink__2g66Z\",\"welcomeText\":\"App_welcomeText__300-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutText\":\"About_aboutText__3qhkp\",\"backLinkCotainer\":\"About_backLinkCotainer__1VKbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchContainer_container__1vDlp\",\"searchInput\":\"SearchContainer_searchInput__2ov73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__12ctp\",\"happier\":\"Header_happier__GCiZl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__1jnEB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__nQNfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"PostList_postList__GvrW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__OPfMi\"};","import axios, { AxiosRequestConfig } from 'axios';\n\nimport { Post } from '../../models/post';\n\nconst optionsAllData: AxiosRequestConfig = {\n  method: 'GET',\n  url: 'https://v2.jokeapi.dev/joke/Any',\n  params: {\n    blacklistFlags: 'nsfw',\n    type: 'single',\n    amount: '10',\n  },\n};\n\nconst service = {\n  getAllData(): Promise<Post[]> {\n    return axios.request(optionsAllData).then((response) => response.data.jokes).catch((error) => {\n      throw new Error(error);\n    });\n  },\n\n  getSingleData(id: number): Promise<Post> {\n    const optionsSingleData: AxiosRequestConfig = {\n      method: 'GET',\n      url: 'https://v2.jokeapi.dev/joke/Any',\n      params: {\n        blacklistFlags: 'nsfw',\n        type: 'single',\n        idRange: id,\n      },\n    };\n\n    return axios.request(optionsSingleData).then((response) => response.data).catch((error) => {\n      throw new Error(error);\n    });\n  },\n};\n\nexport default service;\n","import {\n  action, makeObservable, observable, runInAction,\n} from 'mobx';\n\nimport { Post } from '../../models/post';\nimport service from './store.service';\n\nclass Store {\n  data: Post[] = [{\n    category: 'Programming',\n    type: 'single',\n    joke: 'There are only 10 kinds of people in this world: those who know binary and those who don\\'t.',\n    flags: {\n      nsfw: false,\n      religious: false,\n      political: false,\n      racist: false,\n      sexist: false,\n      explicit: false,\n    },\n    id: 35,\n    safe: true,\n    lang: 'en',\n  }];\n\n  sortedData: Post[] = [];\n\n  singleData: Post | undefined;\n\n  isLoading = true;\n\n  isError = false;\n\n  searchValue = '';\n\n  constructor() {\n    makeObservable(this, {\n      data: observable,\n      sortedData: observable,\n      singleData: observable,\n      isLoading: observable,\n      isError: observable,\n      searchValue: observable,\n      setSortedData: action.bound,\n    });\n\n    service.getAllData()\n      .then((data) => {\n        runInAction(() => {\n          data.forEach(item => item.key = item.id.toString());\n          this.data = data;\n          this.sortedData = data;\n          this.isLoading = false;\n        });\n      })\n      .catch((error) => {\n        runInAction(() => {\n          console.log(error);\n          this.isLoading = false;\n          this.isError = true;\n        });\n      });\n  }\n\n  setSortedData(data: Post[]) {\n    runInAction(() => {\n      this.sortedData = data;\n    });\n  }\n\n  loadSingleData(id: number) {\n    service.getSingleData(id)\n      .then((data) => {\n        runInAction(() => {\n          this.singleData = data;\n          this.isLoading = false;\n        });\n      })\n      .catch((error) => {\n        runInAction(() => {\n          console.log(error);\n          this.isLoading = false;\n          this.isError = true;\n        });\n      });\n  }\n\n  setSearchValue(value: string) {\n    runInAction(() => {\n      this.searchValue = value;\n    });\n  }\n}\n\nexport default new Store();\n","import React, { FC } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Input } from 'antd';\n\n\nimport classes from './SearchContainer.module.scss';\nimport Store from '../../stores/store';\nimport 'antd/dist/antd.css';\n\nconst { Search } = Input;\n\nconst SearchContainer: FC = observer(() => {\n  const value = Store.searchValue;\n  const { setSortedData } = Store;\n  const postData = Store.data;\n  const isLoading = Store.isLoading;\n\n  const handleSearch = (event: { target: { value: string; }; }) => {\n    const searchValue = event.target.value;\n    Store.setSearchValue(searchValue);\n\n    if (searchValue.trim().length > 2) {\n      setSortedData(postData?.filter((post) => post.category.toLowerCase().includes(searchValue.toLowerCase())));\n    } else {\n      setSortedData(postData);\n    }\n  };\n\n  return (\n    <div className={classes.container}>\n      <Search\n        placeholder=\"Type category here\"\n        className={classes.searchInput}\n        onChange={(event) => handleSearch(event)}\n        value={value}\n        loading={isLoading}\n        enterButton />\n    </div>\n  );\n});\n\nexport default SearchContainer;\n","import React, { FC } from 'react';\n\nimport classes from './Header.module.scss';\n\nconst Header: FC = () => (\n  <header className={classes.header}>\n    Site to make you <span className={classes.happier}>happier</span>\n  </header>\n);\n\nexport default Header;\n","import React, { FC } from 'react';\n\nimport classes from './Loading.module.scss';\n\nconst Loading: FC = () => <div className={classes.loading}>Loading...</div>;\n\nexport default Loading;\n","import React, { FC } from 'react';\n\nimport classes from './Error.module.scss';\n\nconst Error: FC = () => <div className={classes.error}>Произошла ошибка во время загрузки данных</div>;\n\nexport default Error;\n","import { useState } from 'react';\n\nconst useView = (): [boolean, () => void] => {\n  const [fullView, setFullView] = useState(false);\n\n  const changeViewHandler = () => {\n    setFullView(!fullView);\n  };\n\n  return [fullView, changeViewHandler];\n};\n\nexport default useView;\n","import Post from './Post';\n\nexport default Post;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button } from 'antd';\n\nimport useView from '../../hooks/useView';\nimport { Post as PostProps } from '../../models/post';\nimport classes from './Post.module.scss';\nimport Store from '../../stores/store';\n\nconst Post: FC<PostProps> = (props) => {\n  const { category, joke, id } = props;\n  const [fullView, changeViewHandler] = useView();\n  const isLoading = Store.isLoading;\n\n  if (fullView) {\n    return (\n      <>\n        <Card style={{ width: 300, marginTop: 16 }} loading={isLoading}>\n          <h2 className={classes.postHeader}>{category}</h2>\n          <p className={classes.postText}>{joke}</p>\n          <div className={classes.postBtnContainer}>\n            <Button\n              onClick={changeViewHandler}\n            >\n              Show less\n            </Button>\n            <Button type=\"primary\"><Link to={`${id}`}>Go to post</Link></Button>\n          </div>\n        </Card>\n      </>\n    );\n  }\n  return (\n    <>\n      <Card style={{ width: 300, marginTop: 16 }} loading={isLoading}>\n        <h2 className={classes.postHeader}>{category}</h2>\n        <p className={classes.postText}>{`${joke.slice(0, 25)}...`}</p>\n        <div className={classes.postBtnContainer}>\n          <Button\n            onClick={changeViewHandler}\n          >\n            Show more\n          </Button>\n          <Button type=\"primary\"><Link to={`${id}`}>Go to post</Link></Button>\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default Post;\n","import PostList from './PostList';\n\nexport default PostList;\n","import React, { FC } from 'react';\nimport { toJS } from 'mobx';\n\nimport { Post as PostType } from '../../models/post';\nimport Loading from '../Loading';\nimport Error from '../Error';\nimport Post from '../Post';\nimport classes from './PostList.module.scss';\nimport Store from '../../stores/store';\n\nconst PostList: FC = () => {\n  const postData = toJS(Store.sortedData);\n  const { isLoading } = Store;\n  const { isError } = Store;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  if (isError) {\n    return <Error />;\n  }\n  return (\n    <div className={classes.postList}>\n      {postData?.map((post: PostType) => (\n        <Post key={post.id.toString()} {...post} />\n      ))}\n    </div>\n  );\n};\n\nexport default PostList;\n","import React, { FC, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Card } from 'antd';\n\nimport classes from './CurrentPost.module.scss';\nimport Store from '../../stores/store';\n\n\nconst CurrentPost: FC = observer(() => {\n  const { id } = useParams();\n  const { isError } = Store;\n  const { isLoading } = Store;\n  const postSingleData = Store.singleData;\n\n  useEffect(() => {\n    Store.loadSingleData(Number(id));\n  }, [id]);\n\n  return (\n    <Card style={{ width: 300, marginTop: 16 }} loading={isLoading} className={classes.currentPost}>\n      <div className={classes.postId}>{`№${id}`}</div>\n      {isError && <p style={{ fontWeight: 'bold' }}>Something went wrong</p>}\n      <div className={classes.postCategory}>{postSingleData?.category}</div>\n      <div className={classes.postJoke}>{postSingleData?.joke}</div>\n    </Card>\n  );\n});\n\nexport default CurrentPost;\n","import React, { FC } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { toJS } from 'mobx';\nimport { Table } from 'antd';\n\nimport PostList from '../../components/PostList';\nimport CurrentPost from '../../components/CurrentPost';\nimport Store from '../../stores/store';\n\n// function onChange(pagination: unknown, filters: any, sorter: any, extra: any) {\n//   console.log('params');\n// }\n\nconst columns = [\n  {\n    title: 'Id',\n    dataIndex: 'id',\n  },\n  {\n    title: 'Category',\n    dataIndex: 'category',\n    sorter: {\n      compare: (a: { category: string; }, b: { category: string; }) => {\n        const res = (a.category > b.category) ? 1 : -1;\n        return res;\n      },\n      multiple: 2,\n    },\n  },\n  {\n    title: 'Joke',\n    dataIndex: 'joke',\n    sorter: {\n      compare: (a: { joke: string; }, b: { joke: string; }) => {\n        const res = (a.joke > b.joke) ? 1 : -1;\n        return res;\n      },\n      multiple: 1,\n    },\n  },\n];\n\nconst Home: FC = observer(() => {\n  const data = toJS(Store.sortedData);\n\n  return (\n    <Routes>\n      <Route\n        index\n        element={(\n          <div style={{ padding: '1rem', textAlign: 'center', fontSize: '17px' }}>\n            <p>Select view</p>\n          </div>\n        )}\n      />\n      <Route\n        path=\"listView\"\n        element={(\n          <PostList />\n        )}\n      />\n      <Route\n        path=\"tableView\"\n        element={(\n          <Table columns={columns} dataSource={data} />\n        )}\n      />\n      <Route path=\"listView/:id\" element={<CurrentPost />} />\n      <Route path=\"tableView/:id\" element={<CurrentPost />} />\n    </Routes>\n  );\n});\n\nexport default Home;\n","import { Button } from 'antd';\nimport React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './About.module.scss';\n\nconst About: FC = () => (\n  <div className={classes.aboutContainer}>\n    <p className={classes.aboutText}>\n      This site was created to make you a little bit happier by make you laughing\n    </p>\n    <div className={classes.backLinkCotainer}>\n      <Link to=\"/\"><Button>To home</Button></Link>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React, { FC } from 'react';\n\nimport classes from './NotFound.module.scss';\n\nconst NotFound: FC = () => <div className={classes.notFound}>Страница не найдена</div>;\n\nexport default NotFound;\n","import React, { useState } from 'react';\nimport {\n  Link,\n  Outlet, Route, Routes,\n} from 'react-router-dom';\nimport { Menu } from 'antd';\n\nimport SearchContainer from '../Search';\nimport classes from './App.module.scss';\nimport Header from '../Header';\nimport Home from '../../pages/home';\nimport About from '../../pages/about';\nimport NotFound from '../NotFound';\n\nconst Layout: React.FC = () => {\n\n  const { SubMenu } = Menu;\n\n  const [ current, setCurrent ] = useState({\n    current: '',\n  });\n\n  const handleClick = (e: { key: string; }) => {\n    setCurrent({ current: e.key });\n  };\n\n  return (\n    <>\n      <Header />\n      <main className={classes.main}>\n        <SearchContainer />\n        <Menu onClick={handleClick} selectedKeys={[current.current]} mode=\"horizontal\" className={classes.navLinkContainer}>\n          <SubMenu key=\"GetSomeFun\" title=\"Get some fun\">\n            <Menu.ItemGroup title=\"Choose view\">\n              <Menu.Item key=\"list\">\n                <Link to={'jokes/listView'}>List</Link>\n              </Menu.Item>\n              <Menu.Item key=\"table\">\n                <Link to={'jokes/tableView'}>Table</Link>\n              </Menu.Item>\n            </Menu.ItemGroup>\n          </SubMenu>\n          <Menu.Item key=\"mail\">\n            <Link to={'about'}>\n              About\n            </Link>\n          </Menu.Item>\n        </Menu>\n        <Outlet />\n      </main>\n    </>\n  );\n};\n\nconst App: React.FC = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />}>\n      <Route\n        index\n        element={(\n          <div className={classes.welcomeText}>\n            <p>{'WELCOME! Please, select \\'Get some fun\\' or you can read about site in \\'About\\''}</p>\n          </div>\n        )}\n      />\n      <Route\n        path=\"jokes/*\"\n        element={<Home />}\n      />\n      <Route path=\"about\" element={<About />} />\n      <Route path=\"/*\" element={<NotFound />} />\n    </Route>\n  </Routes>\n);\n\nexport default App;\n","import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}